- hosts: "{{application_target | mandatory}}:&docker_host"
  gather_facts: no
  become: yes
  tasks:
  - name: Clone Application Repo
    connection: local
    become: no
    git:
      repo : "{{git_repo}}"
      dest : "{{tmp_git_root}}"
      key_file: "{{ansible_ssh_private_key_file}}"

# BEGIN DOCKER APP SPECIFIC
  - name: Deploy Docker Application
    include_role:
      name: docker_app
    vars:
      docker_app_volume_root: "{{ [docker_volume_root, config.friendly_name] | path_join }}"
      docker_app_project_root: "{{tmp_git_root}}"
      docker_app_name: "{{config.friendly_name}}"
      docker_app_config: "{{config}}"
# END DOCKER APP SPECIFIC


# BEGIN REVERSE PROXY SPECIFIC
  - name: Deploy Nginx Proxy for Docker Application
    include_role:
      name: docker_app_proxy
    vars:
      docker_app_proxy_proxy_docker_root: "{{ [hostvars[item.value.proxy.delegate_host].docker_volume_root, hostvars[item.value.proxy.delegate_host].application_nginx_config.friendly_name] | path_join }}"
      docker_app_proxy_proxy_friendly_name: "{{ hostvars[item.value.proxy.delegate_host].application_nginx_config.friendly_name }}"
      docker_app_proxy_proxy_container_root: "{{ [hostvars[item.value.proxy.delegate_host].docker_volume_root, hostvars[item.value.proxy.delegate_host].application_nginx_config.friendly_name, 'docker_data', 'nginx'] | path_join }}"
      docker_app_proxy_proxy_container_uid: "{{ hostvars[item.value.proxy.delegate_host].application_nginx_config.containers.nginx.uid | int }}"
      docker_app_proxy_proxy_container_gid: "{{ hostvars[item.value.proxy.delegate_host].application_nginx_config.containers.nginx.gid | int }}"
      docker_app_proxy_app_project_root: "{{tmp_git_root}}"
      docker_app_proxy_app_container_name: "{{ item.key }}"
      docker_app_proxy_app_container_domain: "{{ item.value.proxy.server }}"
      docker_app_proxy_app_container_delegate_host: "{{item.value.proxy.delegate_host}}"
      #TODO Use this.
      docker_app_proxy_app_container_port: "{{item.value.proxy.container_port}}"
      docker_app_proxy_app_container_self_signed_cert: "{{item.value.proxy.self_signed}}"
      docker_app_proxy_cert_bot_email: "{{ homelab_email }}"
    with_dict: "{{ config.containers }}"
    when: item.value.proxy is defined
# END REVERSE PROXY SPECIFIC

  vars:
    config_key: "{{application_target}}_config"
    config: "{{ hostvars[inventory_hostname][config_key] }}"
    git_repo: "{{ config.repo }}"
    tmp_git_root: "/tmp/{{application_target}}"
    ansible_user: "{{ provision_user }}"
    ansible_ssh_private_key_file: "{{ provision_private_key | realpath }}"
